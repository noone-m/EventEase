from django.shortcuts import render
from rest_framework.authtoken.views import ObtainAuthToken
from rest_framework.compat import coreapi, coreschema
from rest_framework.schemas import coreapi as coreapi_schema
from rest_framework.schemas import ManualSchema
from rest_framework.views import APIView
from rest_framework.decorators import permission_classes,api_view
from rest_framework import status
from rest_framework.response import Response
from .serializers import TokenSerializer
from rest_framework.permissions import IsAuthenticated


class GetToken(ObtainAuthToken):
    serializer_class = TokenSerializer
    if coreapi_schema.is_enabled():
        schema = ManualSchema(
            fields=[
                coreapi.Field(
                    name="email",
                    required=True,
                    location='form',
                    schema=coreschema.String(
                        title="email",
                        description="Valid email for authentication",
                    ),
                ),
                coreapi.Field(
                    name="password",
                    required=True,
                    location='form',
                    schema=coreschema.String(
                        title="Password",
                        description="Valid password for authentication",
                    ),
                ),
            ],
            encoding="application/json",
        )


@api_view(['POST', ])
@permission_classes([IsAuthenticated, ])
def log_out(request):
    user = request.user
    # models.Model.delete(Token.objects.get(user = user)) we can also use this to delete the token
    user.auth_token.delete()    # auth_token here is some how auto generated by the framework
    return Response(status=status.HTTP_204_NO_CONTENT)
